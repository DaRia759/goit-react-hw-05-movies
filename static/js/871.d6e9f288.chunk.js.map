{"version":3,"file":"static/js/871.d6e9f288.chunk.js","mappings":"+PA0CA,EArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gHAECC,EAAAA,EAAAA,IAAgBP,GAFjB,cAEhBQ,EAFgB,gBAGHA,EAASC,OAHN,OAGhBC,EAHgB,OAItBN,EAAgBM,EAAKC,SAJC,kDAMtBC,QAAQC,MAAR,MANsB,0DAAH,qDASvBP,GACD,GAAE,CAACN,IAEJ,IAAMc,EAAgBX,EAAaY,OAAS,EAC1CZ,EAAaa,KAAI,SAAAC,GAAM,OACrB,iBAAqBC,UAAU,cAA/B,WACE,4BAAM,WAASD,EAAOE,WACtB,yBAAG,WAASF,EAAOG,YACnB,uBAAIH,EAAOI,eAHHJ,EAAOK,GADI,KAQvB,uBAAG,qCAGL,OACE,iBAAKJ,UAAU,oBAAf,WACE,wBAAI,aACHJ,IAGN,C,uJCjCD,IAAMS,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAIVC,EAAc,WACvB,OAAOC,MACH,+DACAN,EAEP,EAEYO,EAAiB,SAAAC,GAC1B,OAAOF,MAAM,mDAAD,OAC2CE,EAD3C,8CAERR,EAEP,EAEYS,EAAe,SAAAV,GACxB,OAAOO,MAAM,sCAAD,OAC8BP,EAD9B,mBAERC,EAEP,EAEYU,EAAe,SAAAX,GACxB,OAAOO,MAAM,sCAAD,OAC8BP,EAD9B,2BAERC,EAEP,EAEYhB,EAAkB,SAAAe,GAC3B,OAAOO,MAAM,sCAAD,OAC8BP,EAD9B,kCAERC,EAEP,C,sBChDD,SAASW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO9B,GAEP,YADAwB,EAAOxB,EAET,CAEI6B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.jsx","components/api/MoviesAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'components/api/MoviesAPI';\nimport './Reviews.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        const data = await response.json();\n        setMovieReviews(data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const reviewsMarkup = movieReviews.length > 0 ? (\n    movieReviews.map(review => (\n      <div key={review.id} className=\"review-item\">\n        <span>Author: {review.author}</span>\n        <p>Review: {review.content}</p>\n        <p>{review.created_at}</p>\n      </div>\n    ))\n  ) : (\n    <p>Sorry, no reviews for this movie</p>\n  );\n\n  return (\n    <div className=\"reviews-container\">\n      <h3>Reviews:</h3>\n      {reviewsMarkup}\n    </div>\n  );\n};\n\nexport default Reviews;\n","// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/account/{Daria759}';\n// axios.defaults.params = {\n//     api_key: '588a64147621c3fd4d6888977a9709ec',\n// };\n\nconst options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ODhhNjQxNDc2MjFjM2ZkNGQ2ODg4OTc3YTk3MDllYyIsInN1YiI6IjY0Zjc1OWE0ZmZjOWRlMDBlMTMyZTQwZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.V2H9jIDUdqU5vilUneBqZGbhHzj-gr5yql41Uj7BHJA',\n    },\n};\n\nexport const getTrending = () => {\n    return fetch(\n        'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n        options\n    );\n};\n\nexport const getMovieByName = query => {\n    return fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n        options\n    );\n};\n\nexport const getMovieById = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n        options\n    );\n};\n\nexport const getMovieCast = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n        options\n    );\n};\n\nexport const getMovieReviews = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n        options\n    );\n};\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","fetchMovieReviews","getMovieReviews","response","json","data","results","console","error","reviewsMarkup","length","map","review","className","author","content","created_at","id","options","method","headers","accept","Authorization","getTrending","fetch","getMovieByName","query","getMovieById","getMovieCast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}