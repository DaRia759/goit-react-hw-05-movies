{"version":3,"file":"static/js/521.7949fb73.chunk.js","mappings":"+PA+CA,EA1Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,wGAEhBC,EAAAA,EAAAA,IAAaP,GAChBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAAQ,OAAIL,EAAgBK,EAApB,IAJM,sDAMtBE,QAAQC,IAAR,MANsB,wDAAH,qDASvBN,GACD,GAAE,CAACN,IAEJ,IAAMa,EACJV,EAAaW,MACbX,EAAaW,KAAKC,KAAI,SAAAC,GAAM,OAC1B,iBAAqBC,UAAU,YAA/B,WACE,gBACEC,IACEF,EAAOG,aAAP,yCACsCH,EAAOG,cACzC,uIAENC,IAAKJ,EAAOK,KAAO,WAErB,uBAAIL,EAAOK,QACX,yBAAG,cAAYL,EAAOM,eAVdN,EAAOO,GADS,IAe9B,OACE,iBAAKN,UAAU,iBAAf,WACE,wBAAI,aACHJ,IAGN,C,uJCtCD,IAAMW,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAIVC,EAAc,WACvB,OAAOC,MACH,+DACAN,EAEP,EAEYO,EAAiB,SAAAC,GAC1B,OAAOF,MAAM,mDAAD,OAC2CE,EAD3C,8CAERR,EAEP,EAEYS,EAAe,SAAAV,GACxB,OAAOO,MAAM,sCAAD,OAC8BP,EAD9B,mBAERC,EAEP,EAEYjB,EAAe,SAAAgB,GACxB,OAAOO,MAAM,sCAAD,OAC8BP,EAD9B,2BAERC,EAEP,EAEYU,EAAkB,SAAAX,GAC3B,OAAOO,MAAM,sCAAD,OAC8BP,EAD9B,kCAERC,EAEP,C,sBChDD,SAASW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOpC,KAAK+B,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.jsx","components/api/MoviesAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'components/api/MoviesAPI';\nimport './Cast.css'; \n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [imageCredits, setImageCredits] = useState({});\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        await getMovieCast(movieId)\n          .then(response => response.json())\n          .then(response => setImageCredits(response));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieCredits();\n  }, [movieId]);\n\n  const creditsMarkup =\n    imageCredits.cast &&\n    imageCredits.cast.map(person => (\n      <div key={person.id} className=\"cast-card\">\n        <img\n          src={\n            person.profile_path\n              ? `https://image.tmdb.org/t/p/w185${person.profile_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSmVm-NOFWAwzSDCG2503S24gnb6ij0l6Qz1URGonjsEqkf6fmGza-C7SW9iuHQaJj_7sA&usqp=CAU'\n          }\n          alt={person.name + 'photo'}\n        />\n        <p>{person.name}</p>\n        <p>Character: {person.character}</p>\n      </div>\n    ));\n\n  return (\n    <div className=\"cast-container\">\n      <h2>Credits:</h2>\n      {creditsMarkup}\n    </div>\n  );\n};\n\nexport default Cast;\n","// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/account/{Daria759}';\n// axios.defaults.params = {\n//     api_key: '588a64147621c3fd4d6888977a9709ec',\n// };\n\nconst options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ODhhNjQxNDc2MjFjM2ZkNGQ2ODg4OTc3YTk3MDllYyIsInN1YiI6IjY0Zjc1OWE0ZmZjOWRlMDBlMTMyZTQwZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.V2H9jIDUdqU5vilUneBqZGbhHzj-gr5yql41Uj7BHJA',\n    },\n};\n\nexport const getTrending = () => {\n    return fetch(\n        'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n        options\n    );\n};\n\nexport const getMovieByName = query => {\n    return fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n        options\n    );\n};\n\nexport const getMovieById = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n        options\n    );\n};\n\nexport const getMovieCast = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n        options\n    );\n};\n\nexport const getMovieReviews = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n        options\n    );\n};\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","imageCredits","setImageCredits","useEffect","fetchMovieCredits","getMovieCast","then","response","json","console","log","creditsMarkup","cast","map","person","className","src","profile_path","alt","name","character","id","options","method","headers","accept","Authorization","getTrending","fetch","getMovieByName","query","getMovieById","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}