{"version":3,"file":"static/js/947.e08697cc.chunk.js","mappings":"iOAuEA,UAnEqB,WAAO,IAAD,MACvB,GAA0CA,EAAAA,EAAAA,UAAS,CAAC,GAApD,eAAOC,EAAP,KAAsBC,EAAtB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAezC,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,gHAEUC,EAAAA,EAAAA,IAAaR,GAFvB,cAEPS,EAFO,gBAGMA,EAASC,OAHf,OAGPC,EAHO,OAIbZ,EAAiBY,GAJJ,kDAMbC,QAAQC,MAAR,MANa,0DAAH,qDASlBN,GACH,GAAE,CAACP,KAGA,4BACI,0BACI,SAAC,KAAD,CAAMc,GAAIZ,EAAV,UACI,4BAAQ,iBAKhB,0BAEQ,gBAAKa,IAAKjB,EAAckB,YAAd,yCAC0BlB,EAAckB,aAC5C,uIACFC,IAAKnB,EAAcoB,WAI/B,4BACI,wBAAKpB,EAAcoB,SACnB,wBAAI,iBACHpB,EAAcqB,cACf,wBAAI,eACJ,0BAAOrB,EAAcsB,YACrB,wBAAI,WANR,UAOKtB,EAAcuB,cAPnB,aAOK,EAAsBC,KAAI,SAACC,EAAOC,GAE/B,OACI,yBACKD,EAAME,MADD3B,EAAcoB,MAAQM,EAIvC,QAEL,2BACI,uBAAG,4BACH,yBACI,SAAC,KAAD,CAAMV,GAAE,kBAAad,EAAb,SAAR,SAAqC,YAEzC,yBACI,SAAC,KAAD,CAAMc,GAAE,kBAAad,EAAb,YAAR,SAAwC,kBAGhD,SAAC,KAAD,MAGX,C,uJC9DD,IAAM0B,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAIVC,EAAc,WACvB,OAAOC,MACH,+DACAN,EAEP,EAEYO,EAAiB,SAAAC,GAC1B,OAAOF,MAAM,mDAAD,OAC2CE,EAD3C,8CAERR,EAEP,EAEYlB,EAAe,SAAA2B,GACxB,OAAOH,MAAM,sCAAD,OAC8BG,EAD9B,mBAERT,EAEP,EAEYU,EAAe,SAAAD,GACxB,OAAOH,MAAM,sCAAD,OAC8BG,EAD9B,2BAERT,EAEP,EAEYW,EAAkB,SAAAF,GAC3B,OAAOH,MAAM,sCAAD,OAC8BG,EAD9B,kCAERT,EAEP,C,sBChDD,SAASY,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOlC,GAEP,YADA4B,EAAO5B,EAET,CAEIiC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/MovieDetails/MovieDetails.jsx","components/api/MoviesAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { getMovieById } from 'components/api/MoviesAPI';\n\nconst MovieDetails = () => {\n    const [selectedMovie, setSelectedMovie] = useState({});\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLink = location.state?.from ?? '/';\n\n    useEffect(() => {\n        const fetchDetails = async () => {\n            try {\n                const response = await getMovieById(movieId);\n                const data = await response.json();\n                setSelectedMovie(data); \n            } catch (error) {\n                console.error(error); \n            }\n        };\n        fetchDetails();\n    }, [movieId]);\n\n    return (\n        <div>\n            <div>\n                <Link to={backLink}>\n                    <button>\n                        Go Back\n                    </button>\n                </Link>\n            </div>\n            <div>\n                {\n                    <img src={selectedMovie.poster_path\n                    ? `https://image.tmdb.org/t/p/w185${selectedMovie.poster_path}`\n                        : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSmVm-NOFWAwzSDCG2503S24gnb6ij0l6Qz1URGonjsEqkf6fmGza-C7SW9iuHQaJj_7sA&usqp=CAU'}\n                        alt={selectedMovie.title}\n                    />\n                }\n            </div>\n            <div>\n                <h2>{selectedMovie.title}</h2>\n                <h3>User Score: </h3>\n                {selectedMovie.vote_average}\n                <h3>Overviews</h3>\n                <span>{selectedMovie.overview}</span>\n                <h3>Genres</h3>\n                {selectedMovie.genres?.map((genre, index) => {\n                    \n                    return (\n                        <div key={selectedMovie.title + index}>\n                            {genre.name}\n                        </div>\n                    );\n                })}\n            </div>\n            <ul>\n                <p>Aditional information:</p>\n                <li>\n                    <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n                </li>\n                <li>\n                    <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n                </li>\n            </ul>\n            <Outlet />\n        </div>\n    );\n};\n\nexport default MovieDetails;\n","// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/account/{Daria759}';\n// axios.defaults.params = {\n//     api_key: '588a64147621c3fd4d6888977a9709ec',\n// };\n\nconst options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ODhhNjQxNDc2MjFjM2ZkNGQ2ODg4OTc3YTk3MDllYyIsInN1YiI6IjY0Zjc1OWE0ZmZjOWRlMDBlMTMyZTQwZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.V2H9jIDUdqU5vilUneBqZGbhHzj-gr5yql41Uj7BHJA',\n    },\n};\n\nexport const getTrending = () => {\n    return fetch(\n        'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n        options\n    );\n};\n\nexport const getMovieByName = query => {\n    return fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n        options\n    );\n};\n\nexport const getMovieById = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n        options\n    );\n};\n\nexport const getMovieCast = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n        options\n    );\n};\n\nexport const getMovieReviews = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n        options\n    );\n};\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","selectedMovie","setSelectedMovie","movieId","useParams","backLink","useLocation","state","from","useEffect","fetchDetails","getMovieById","response","json","data","console","error","to","src","poster_path","alt","title","vote_average","overview","genres","map","genre","index","name","options","method","headers","accept","Authorization","getTrending","fetch","getMovieByName","query","id","getMovieCast","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}